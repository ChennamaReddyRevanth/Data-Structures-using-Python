class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
        self.prev=None

class DoubleLinkedList:
    def __init__(self):
        self.head=None
    def createNode(self,data):
        newnode=Node(data)
        temp=self.head
        if self.head==None:
            self.head=newnode
            temp=self.head
        else:
            temp.next=newnode
            newnode.prev=temp
            temp=newnode
            
    def display(self):
        if self.head is None:
            print("Linked LIst is empty")
        else:
            temp=self.head
            while temp!=None :
                print(temp.data,"-->",end="")
                temp=temp.next
    def insertAtBeginning(self,data):
        newnode=Node(data)
        temp=self.head
        if self.head==None:
            self.head=newnode
            temp=self.head
        else:
            newnode.next=self.head
            self.head.prev=newnode
            self.head=newnode
    def insertAtEnd(self,data):
        newnode=Node(data)
        temp=self.head
        if self.head==None:
            self.head=newnode
            temp=self.head
        else:
            while temp.next !=None:
                temp=temp.next
            temp.next=newnode
            newnode.prev=temp
            temp=newnode
    def insertAtPosition(self,pos,data):
        newnode=Node(data)
        temp=self.head
        if self.head==None:
            self.head=newnode
            temp=self.head
        elif pos==0:
            newnode.next=self.head
            self.head.prev=newnode
            self.head=newnode
        else:
            
            for i in range(pos-2):
                temp=temp.next
            newnode.prev=temp
            newnode.next=temp.next
           
            temp.next=newnode
            temp=newnode
    def deleteAtBeginning(self):
        temp=self.head
        if self.head==None:
            print("DLL is Empty")
        else:
            self.head=temp.next
            temp.next=None
            self.head.prev=None
            del temp

    def deleteAtEnd(self):
        temp=self.head.next
        before=self.head
        if self.head==None:
            print("DLL is Empty")
        else:
            while temp.next !=None:
                temp=temp.next
                before=before.next
            before.next=None
            temp.prev=None
            del temp
    def deleteAtPosition(self,pos):
        temp=self.head.next
        before=self.head
        if self.head==None:
            print("DLL is Empty")
        else:
            for i in range(1,pos-1):
                temp=temp.next
                before=before.next
            before.next=temp.next
            temp.next.prev=before
            temp.next=None
            temp.prev=None
            del temp

ob=DoubleLinkedList()


ob.insertAtBeginning(55)
ob.insertAtBeginning(100)
ob.insertAtEnd(10)
ob.insertAtEnd(45)
ob.deleteAtBeginning()
ob.deleteAtEnd()

ob.insertAtPosition(2,1000)
ob.insertAtPosition(3,2000)
ob.insertAtPosition(0,1780)
ob.insertAtPosition(5,1670)


ob.display()

        
        
